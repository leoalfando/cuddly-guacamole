version: '3.9'
services:
  account-server:
    build:
      context: ./account-server
      dockerfile: Dockerfile
    image: account-server
    container_name: account-server-node
    command: npm run start
    volumes:
      - ./account-server/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8080:8080"
    env_file: ./account-server/.env
    environment:
      - NODE_ENV=production
      - PORT=8080
      - TRANSACTION_SERVER_API=http://transaction-server-node:8081/api/v1
    networks:
      - app-network
  transaction-server:
    build:
      context: ./transaction-server
      dockerfile: Dockerfile
    image: transaction-server
    container_name: transaction-server-node
    command: npm run start
    volumes:
      - ./transaction-server/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8081:8081"
    env_file: ./transaction-server/.env
    environment:
      - NODE_ENV=production
      - PORT=8081
    networks:
      - app-network
  react-app:
    build:
      context: ./transaction-server
      dockerfile: Dockerfile
    container_name: react-app
    build: ./react-app
    volumes:
      - ./react-app/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - ACCOUNT_SERVER_URL=http://localhost:8080/api/v1/accounts
      - ACCOUNT_SERVER_API_KEY=someapikey
      - USER_SERVER_URL=http://localhost:8080/api/v1/users
      - USER_SERVER_API_KEY=someapikey
      - TRANSACTION_SERVER_URL=http://localhost:8081/api/v1/transactions
      - TRANSACTION_SERVER_API_KEY=someapikey
    command: npm start
    networks:
      - app-network
networks:
    app-network:
        driver: bridge
volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local
